/*
El método length(): devuelve el número de caracteres de la cadena.

El método toUpperCase(): devuelve la cadena convertida a mayúsculas.

Método toLowerCase(): devuelve la cadena convertida a minúsculas.

Método equals(argumento): compara la cadena con otra cadena pasada como argumento y devuelve true si son iguales.

Método equalsIgnoreCase(argumento): funciona igual que equals() pero no distingue entre mayúsculas y minúsculas.

Método compareTo(argumento): compara una cadena con la cadena pasada como argumento. Si son iguales devuelve 0, si la primera es menor que la segunda devuelve un número negativo, y si es mayor un número positivo.

Método charAt(posición): devuelve el carácter que ocupa la posición especificada como argumento.

El método codePointAt(): devuelve el código ASCII asociado al carácter de la posición pasada como argumento.

El método concat(argumento): devuelve una cadena concatenada con la cadena pasada como argumento.

El método contains(subcadena): devuelve true si la cadena contiene la subcadena pasada como argumento, de lo contrario devuelve false.

El método startsWith(subcadena): devuelve true si la cadena comienza por la subcadena especificada en el argumento, de lo contrario devuelve false.

El método endsWith(subcadena): devuelve true si la cadena termina por la subcadena especificada como argumento, de lo contrario devuelve false.

El método indexOf(caracter o cadena): devuelve la posición que ocupa la primera ocurrencia del carácter o cadena especificada como argumento. Si el carácter no se encuentra dentro de la cadena devuelve -1.

Los métodos replace(old, new), replaceAll(old, new) y replaceFirst(old, new): estos métodos devuelven una nueva cadena resultado de reemplazar las ocurrencias de la subcadena old por la subcadena new.

La función split(delimitador): devuelve un array de objetos String que resulta de la división de la cadena del objeto al que se aplica en subcadenas divididas por el carácter especificado como argumento.

El método trim(): devuelve una nueva cadena que resulta de recortar en la cadena original los espacios en blanco que haya al principio y al final.

El método substring(posición): extrae y devuelve una subcadena a partir de la posición especificada como argumento.

El método substring(inicio, fin): extrae y devuelve una subcadena desde la posición de inicio hasta la posición de fin.
*/